# Example 1
library(quanteda)
load("/home/juan/Comments.RData")
load("/home/juan/Comments.RData")
my_corpus <- corpus(Comments$text)
mycorpus <- data.frame(summary(my_corpus, n = nrow(Comments)))
summary(my_corpus)
docvars(my_corpus, "Rankings") <- Comments$Rankings
docvars(my_corpus, "Total.Comments") <- Comments$TotalComments
Comments$Types <- mycorpus$Types
Comments$Tokens <- mycorpus$Tokens
Comments$Sentences <- mycorpus$Sentences
spanishstopwords <- c("q", stopwords("spanish"))
Restaurant <- dfm(corpus(
my_corpus),
remove_numbers = TRUE,
remove = spanishstopwords,
stem = TRUE, remove_punct = TRUE)
restaurant <- textstat_simil(Restaurant,
margin = "documents",
method = "jaccard")
restaurantdf <- data.frame(as.matrix(restaurant))
restaurantdf[is.na(restaurantdf)] = 0
restaurant <- data.frame(jaccard = restaurant[lower.tri(restaurant, diag = FALSE)])
library(clustertend)
set.seed(123)
hopkins(restaurantdf, n = nrow(restaurantdf)/10)
library(mclust)
fit <- Mclust(restaurantdf)
summary(fit)
clasificados <- data.frame(fit$classification)
names(clasificados)[1] <- "classification"
clasificados$Category <- "restaurant"
library(topicmodels)
restaurantC <- convert(Restaurant, to = "topicmodels", docvars = NULL)
pave <- LDA(restaurantC, k = 9)
library(tidytext)
# Example 1
library(quanteda)
load("/home/juan/Comments.RData")
my_corpus <- corpus(Comments$text)
mycorpus <- data.frame(summary(my_corpus, n = nrow(Comments)))
summary(my_corpus)
spanishstopwords <- c("q", stopwords("spanish"))
Restaurant <- dfm(corpus(
my_corpus),
remove_numbers = TRUE,
remove = spanishstopwords,
stem = TRUE, remove_punct = TRUE)
restaurant <- textstat_simil(Restaurant,
margin = "documents",
method = "jaccard")
restaurantdf <- data.frame(as.matrix(restaurant))
restaurantdf[is.na(restaurantdf)] = 0
restaurant <- data.frame(jaccard = restaurant[lower.tri(restaurant, diag = FALSE)])
library(clustertend)
set.seed(123)
hopkins(restaurantdf, n = nrow(restaurantdf)/10)
library(mclust)
fit <- Mclust(restaurantdf)
summary(fit)
clasificados <- data.frame(fit$classification)
names(clasificados)[1] <- "classification"
clasificados$Category <- "restaurant"
library(topicmodels)
install.packages("topicmodels")
install.packages("topicmodels")
library(topicmodels)
restaurantC <- convert(Restaurant, to = "topicmodels", docvars = NULL)
pave <- LDA(restaurantC, k = 9)
library(tidytext)
restaurant_topics <- tidy(pave, matrix = "beta")
restaurant_topics$Category <- "restaurant"
library(broom)
EssentialWordsrestaurant <- tidy(pave)
library(dplyr)
topics <- EssentialWordsrestaurant %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
library(igraph)
g_rest <- graph.data.frame(topics, directed = FALSE)
bipartite.mapping(g_rest)
V(g_rest)$type <- bipartite_mapping(g_rest)$type
V(g_rest)$color <- ifelse(V(g_rest)$type, "lightblue", "red")
V(g_rest)$shape <- ifelse(V(g_rest)$type, "circle", "square")
E(g_rest)$color <- "black"
V(g_rest)$size <- eccentricity(g_rest) * 2.5
V(g_rest)$label.cex <- degree(g_rest) * 2.5
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_as_bipartite)
topics <- EssentialWordsrestaurant %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
library(igraph)
g_rest <- graph.data.frame(topics, directed = FALSE)
bipartite.mapping(g_rest)
V(g_rest)$type <- bipartite_mapping(g_rest)$type
V(g_rest)$color <- ifelse(V(g_rest)$type, "lightblue", "red")
V(g_rest)$shape <- ifelse(V(g_rest)$type, "circle", "square")
E(g_rest)$color <- "black"
V(g_rest)$size <- eccentricity(g_rest) * 2.5
V(g_rest)$label.cex <- degree(g_rest) * 2.5
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_as_bipartite)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_as_bipartite)
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
topics <- EssentialWordsrestaurant %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
library(igraph)
g_rest <- graph.data.frame(topics, directed = FALSE)
bipartite.mapping(g_rest)
V(g_rest)$type <- bipartite_mapping(g_rest)$type
V(g_rest)$color <- ifelse(V(g_rest)$type, "lightblue", "red")
V(g_rest)$shape <- ifelse(V(g_rest)$type, "circle", "square")
E(g_rest)$color <- "black"
V(g_rest)$size <- eccentricity(g_rest) * 2.5
V(g_rest)$label.cex <- degree(g_rest) * 2.5
plot(g_rest,
vertex.label.cex = 0.8,
vertex.label.color = "black",
layout = layout_with_dh)
install.packages(c("broom", "statsExpressions"))
